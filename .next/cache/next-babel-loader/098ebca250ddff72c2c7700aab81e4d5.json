{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime-corejs2/regenerator\";\nimport \"antd/lib/col/style\";\nimport _Col from \"antd/lib/col\";\nimport _classCallCheck from \"@babel/runtime-corejs2/helpers/esm/classCallCheck\";\nimport _createClass from \"@babel/runtime-corejs2/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"@babel/runtime-corejs2/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime-corejs2/helpers/esm/getPrototypeOf\";\nimport _inherits from \"@babel/runtime-corejs2/helpers/esm/inherits\";\nvar __jsx = React.createElement;\n// import \"../assets/styles.less\";\n// import { Col , Pagination  } from 'antd';\n// import Link from 'next/link'\n// import Layout from \"../layout/Main\";\n// import Card from '../components/card';\n// import { getPosts } from '../api/index';\n// import { connect } from \"react-redux\";\n// const IndexPage = (props) => {\n// const { data,total } = props\n//   return (\n//   <Layout>\n//       { data.map(view => (\n//         <Col span={8} md={8} sm={12} xs={24} className=\"mb-50\">\n//           <Card key={view.id} post={view}/>\n//         </Col>\n//       ))}\n//       <Pagination defaultCurrent={1} defaultPageSize={30} total={total}></Pagination>\n//   </Layout>\n//   )\n// }\n// IndexPage.getInitialProps = async ({ store}) => {\n//   //let page = 1;\n//   const res = await getPosts();\n//   const data = await res.json();\n//   return store.dispatch({ type: \"GETDATA\", payload: {...data} }); \n//   // return { ...data , total: 443 }\n// }\n// export default connect()(IndexPage);\nimport React from 'react';\nimport { connect } from 'react-redux';\nimport Link from 'next/link';\nimport Card from '../components/card';\nimport Layout from \"../layout/Main\";\nimport { loadData, tickClock } from '../actions';\nimport Page from '../components/page';\n\nvar Index =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(Index, _React$Component);\n\n  function Index() {\n    _classCallCheck(this, Index);\n\n    return _possibleConstructorReturn(this, _getPrototypeOf(Index).apply(this, arguments));\n  }\n\n  _createClass(Index, [{\n    key: \"render\",\n    value: function render() {\n      return __jsx(Layout, null, __jsx(_Col, {\n        span: 8,\n        md: 8,\n        sm: 12,\n        xs: 24,\n        className: \"mb-50\"\n      }, __jsx(Card, {\n        key: view.id\n      })));\n    }\n  }], [{\n    key: \"getInitialProps\",\n    value: function getInitialProps(props) {\n      var _props$ctx, store, isServer;\n\n      return _regeneratorRuntime.async(function getInitialProps$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              _props$ctx = props.ctx, store = _props$ctx.store, isServer = _props$ctx.isServer;\n              store.dispatch(tickClock(isServer));\n\n              if (!store.getState().placeholderData) {\n                store.dispatch(loadData());\n              }\n\n              return _context.abrupt(\"return\", {\n                isServer: isServer\n              });\n\n            case 4:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      });\n    }\n  }]);\n\n  return Index;\n}(React.Component);\n\nexport default connect()(Index);","map":{"version":3,"sources":["D:/Dora/travel-blog-next/pages/index.js"],"names":["React","connect","Link","Card","Layout","loadData","tickClock","Page","Index","view","id","props","ctx","store","isServer","dispatch","getState","placeholderData","Component"],"mappings":";;;;;;;;;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AAGA;AAGA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,OAAT,QAAwB,aAAxB;AAEA,OAAOC,IAAP,MAAiB,WAAjB;AACA,OAAOC,IAAP,MAAiB,oBAAjB;AACA,OAAOC,MAAP,MAAmB,gBAAnB;AAEA,SAASC,QAAT,EAAmBC,SAAnB,QAAoC,YAApC;AACA,OAAOC,IAAP,MAAiB,oBAAjB;;IAEMC,K;;;;;;;;;;;;;6BAWK;AACP,aACE,MAAC,MAAD,QAEE;AAAK,QAAA,IAAI,EAAE,CAAX;AAAc,QAAA,EAAE,EAAE,CAAlB;AAAqB,QAAA,EAAE,EAAE,EAAzB;AAA6B,QAAA,EAAE,EAAE,EAAjC;AAAqC,QAAA,SAAS,EAAC;AAA/C,SACE,MAAC,IAAD;AAAM,QAAA,GAAG,EAAEC,IAAI,CAACC;AAAhB,QADF,CAFF,CADF;AASD;;;oCApB4BC,K;;;;;;;2BACCA,KAAK,CAACC,G,EAA1BC,K,cAAAA,K,EAAOC,Q,cAAAA,Q;AACfD,cAAAA,KAAK,CAACE,QAAN,CAAeT,SAAS,CAACQ,QAAD,CAAxB;;AAEA,kBAAI,CAACD,KAAK,CAACG,QAAN,GAAiBC,eAAtB,EAAuC;AACrCJ,gBAAAA,KAAK,CAACE,QAAN,CAAeV,QAAQ,EAAvB;AACD;;+CACM;AAAES,gBAAAA,QAAQ,EAARA;AAAF,e;;;;;;;;;;;;EARSd,KAAK,CAACkB,S;;AAwB1B,eAAejB,OAAO,GAAGO,KAAH,CAAtB","sourcesContent":["\r\n// import \"../assets/styles.less\";\r\n// import { Col , Pagination  } from 'antd';\r\n// import Link from 'next/link'\r\n// import Layout from \"../layout/Main\";\r\n// import Card from '../components/card';\r\n// import { getPosts } from '../api/index';\r\n// import { connect } from \"react-redux\";\r\n\r\n// const IndexPage = (props) => {\r\n// const { data,total } = props\r\n//   return (\r\n//   <Layout>\r\n//       { data.map(view => (\r\n//         <Col span={8} md={8} sm={12} xs={24} className=\"mb-50\">\r\n//           <Card key={view.id} post={view}/>\r\n//         </Col>\r\n//       ))}\r\n//       <Pagination defaultCurrent={1} defaultPageSize={30} total={total}></Pagination>\r\n//   </Layout>\r\n//   )\r\n// }\r\n\r\n\r\n// IndexPage.getInitialProps = async ({ store}) => {\r\n//   //let page = 1;\r\n//   const res = await getPosts();\r\n//   const data = await res.json();\r\n//   return store.dispatch({ type: \"GETDATA\", payload: {...data} }); \r\n//   // return { ...data , total: 443 }\r\n// }\r\n\r\n\r\n// export default connect()(IndexPage);\r\n\r\n\r\nimport React from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { Col , Pagination  } from 'antd';\r\nimport Link from 'next/link'\r\nimport Card from '../components/card';\r\nimport Layout from \"../layout/Main\";\r\n\r\nimport { loadData, tickClock } from '../actions'\r\nimport Page from '../components/page'\r\n\r\nclass Index extends React.Component {\r\n  static async getInitialProps(props) {\r\n    const { store, isServer } = props.ctx\r\n    store.dispatch(tickClock(isServer))\r\n\r\n    if (!store.getState().placeholderData) {\r\n      store.dispatch(loadData())\r\n    }\r\n    return { isServer }\r\n  }\r\n\r\n  render() {\r\n    return(\r\n      <Layout>\r\n        {/* <Pagination defaultCurrent={1} defaultPageSize={30} total={total}></Pagination> */}\r\n        <Col span={8} md={8} sm={12} xs={24} className=\"mb-50\">\r\n          <Card key={view.id}/>\r\n        </Col>\r\n        {/* <Page title=\"Index Page\" linkTo=\"/other\" NavigateTo=\"Other Page\" /> */}\r\n      </Layout>\r\n    ) \r\n  }\r\n}\r\n\r\nexport default connect()(Index)\r\n\r\n"]},"metadata":{},"sourceType":"module"}