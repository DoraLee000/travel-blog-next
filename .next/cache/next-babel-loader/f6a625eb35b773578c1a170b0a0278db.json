{"ast":null,"code":"import _Object$defineProperty from \"@babel/runtime-corejs2/core-js/object/define-property\";\nimport _Object$defineProperties from \"@babel/runtime-corejs2/core-js/object/define-properties\";\nimport _Object$getOwnPropertyDescriptors from \"@babel/runtime-corejs2/core-js/object/get-own-property-descriptors\";\nimport _Object$getOwnPropertyDescriptor from \"@babel/runtime-corejs2/core-js/object/get-own-property-descriptor\";\nimport _Object$getOwnPropertySymbols from \"@babel/runtime-corejs2/core-js/object/get-own-property-symbols\";\nimport _Object$keys from \"@babel/runtime-corejs2/core-js/object/keys\";\nimport \"antd/lib/row/style\";\nimport _Row from \"antd/lib/row\";\nimport \"antd/lib/pagination/style\";\nimport _Pagination from \"antd/lib/pagination\";\nimport \"antd/lib/col/style\";\nimport _Col from \"antd/lib/col\";\nimport _defineProperty from \"@babel/runtime-corejs2/helpers/esm/defineProperty\";\nimport \"antd/lib/layout/style\";\nimport _Layout from \"antd/lib/layout\";\nimport React from \"react\";\nvar __jsx = React.createElement;\n\nfunction ownKeys(object, enumerableOnly) { var keys = _Object$keys(object); if (_Object$getOwnPropertySymbols) { var symbols = _Object$getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return _Object$getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (_Object$getOwnPropertyDescriptors) { _Object$defineProperties(target, _Object$getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { _Object$defineProperty(target, key, _Object$getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport \"../assets/styles.less\";\nimport Header from '../components/header';\nimport Footer from '../components/footer';\nimport Carousel from '../components/carousel';\nimport Card from '../components/card';\nimport { getPosts } from '../api/index';\nimport { connect } from \"react-redux\";\nconst {\n  Content\n} = _Layout;\n\nconst IndexPage = props => {\n  const onChange = async page => {\n    console.log(page);\n    const res = await getPosts(page);\n    const data = await res.json();\n    store.dispatch({\n      type: \"GETDATA\",\n      payload: _objectSpread({}, data)\n    }); // component will be able to read from store's state when rendered\n\n    return data;\n  };\n\n  return __jsx(_Layout, null, __jsx(Header, null), __jsx(Content, null, __jsx(Carousel, null), __jsx(_Row, {\n    justify: \"space-around\",\n    type: \"flex\"\n  }, __jsx(_Col, {\n    span: 20,\n    className: \"card mb-50\"\n  }, __jsx(_Row, {\n    gutter: 16\n  }, props.data.map(view => __jsx(_Col, {\n    span: 8,\n    md: 8,\n    sm: 12,\n    xs: 24,\n    className: \"mb-50\"\n  }, __jsx(Card, {\n    key: view.id,\n    post: view\n  }))), __jsx(_Pagination, {\n    onChange: onChange,\n    total: 50\n  }), \";\")))), __jsx(Footer, null));\n};\n\nIndexPage.getInitialProps = async ({\n  store,\n  isServer,\n  pathname,\n  query\n}) => {\n  let page = 2;\n  const res = await getPosts(page);\n  const data = await res.json();\n  store.dispatch({\n    type: \"GETDATA\",\n    payload: _objectSpread({}, data)\n  }); // component will be able to read from store's state when rendered\n\n  return data;\n};\n\nexport default connect()(IndexPage);","map":{"version":3,"sources":["D:/Dora/travel-blog-next/pages/index.js"],"names":["Header","Footer","Carousel","Card","getPosts","connect","Content","IndexPage","props","onChange","page","console","log","res","data","json","store","dispatch","type","payload","map","view","id","getInitialProps","isServer","pathname","query"],"mappings":";;;;;;;;;;;;;;;;;;;;;;AACA,OAAO,uBAAP;AAEA,OAAOA,MAAP,MAAmB,sBAAnB;AACA,OAAOC,MAAP,MAAmB,sBAAnB;AACA,OAAOC,QAAP,MAAqB,wBAArB;AACA,OAAOC,IAAP,MAAiB,oBAAjB;AACA,SAASC,QAAT,QAAyB,cAAzB;AACA,SAASC,OAAT,QAAwB,aAAxB;AAEA,MAAM;AAAEC,EAAAA;AAAF,WAAN;;AAEA,MAAMC,SAAS,GAAIC,KAAD,IAAW;AAC3B,QAAMC,QAAQ,GAAG,MAAOC,IAAP,IAAgB;AAC/BC,IAAAA,OAAO,CAACC,GAAR,CAAYF,IAAZ;AACA,UAAMG,GAAG,GAAG,MAAMT,QAAQ,CAACM,IAAD,CAA1B;AACF,UAAMI,IAAI,GAAG,MAAMD,GAAG,CAACE,IAAJ,EAAnB;AACAC,IAAAA,KAAK,CAACC,QAAN,CAAe;AAAEC,MAAAA,IAAI,EAAE,SAAR;AAAmBC,MAAAA,OAAO,oBAAML,IAAN;AAA1B,KAAf,EAJiC,CAIwB;;AACzD,WAAOA,IAAP;AACC,GAND;;AAOA,SACA,qBACE,MAAC,MAAD,OADF,EAEE,MAAC,OAAD,QACE,MAAC,QAAD,OADF,EAEE;AAAK,IAAA,OAAO,EAAC,cAAb;AAA4B,IAAA,IAAI,EAAC;AAAjC,KACA;AAAK,IAAA,IAAI,EAAE,EAAX;AAAe,IAAA,SAAS,EAAC;AAAzB,KACE;AAAK,IAAA,MAAM,EAAE;AAAb,KACIN,KAAK,CAACM,IAAN,CAAWM,GAAX,CAAeC,IAAI,IACnB;AAAK,IAAA,IAAI,EAAE,CAAX;AAAc,IAAA,EAAE,EAAE,CAAlB;AAAqB,IAAA,EAAE,EAAE,EAAzB;AAA6B,IAAA,EAAE,EAAE,EAAjC;AAAqC,IAAA,SAAS,EAAC;AAA/C,KACE,MAAC,IAAD;AAAM,IAAA,GAAG,EAAEA,IAAI,CAACC,EAAhB;AAAoB,IAAA,IAAI,EAAED;AAA1B,IADF,CADA,CADJ,EAME;AAAa,IAAA,QAAQ,EAAEZ,QAAvB;AAAiC,IAAA,KAAK,EAAE;AAAxC,IANF,MADF,CADA,CAFF,CAFF,EAiBE,MAAC,MAAD,OAjBF,CADA;AAqBD,CA7BD;;AAgCAF,SAAS,CAACgB,eAAV,GAA4B,OAAO;AAAEP,EAAAA,KAAF;AAASQ,EAAAA,QAAT;AAAmBC,EAAAA,QAAnB;AAA6BC,EAAAA;AAA7B,CAAP,KAAgD;AAC1E,MAAIhB,IAAI,GAAG,CAAX;AACA,QAAMG,GAAG,GAAG,MAAMT,QAAQ,CAACM,IAAD,CAA1B;AACA,QAAMI,IAAI,GAAG,MAAMD,GAAG,CAACE,IAAJ,EAAnB;AACAC,EAAAA,KAAK,CAACC,QAAN,CAAe;AAAEC,IAAAA,IAAI,EAAE,SAAR;AAAmBC,IAAAA,OAAO,oBAAML,IAAN;AAA1B,GAAf,EAJ0E,CAIjB;;AACzD,SAAOA,IAAP;AACD,CAND;;AASA,eAAeT,OAAO,GAAGE,SAAH,CAAtB","sourcesContent":["\r\nimport \"../assets/styles.less\";\r\nimport { Layout , Row , Col , Pagination   } from 'antd';\r\nimport Header from '../components/header';\r\nimport Footer from '../components/footer';\r\nimport Carousel from '../components/carousel';\r\nimport Card from '../components/card';\r\nimport { getPosts } from '../api/index';\r\nimport { connect } from \"react-redux\";\r\n\r\nconst { Content } = Layout;\r\n\r\nconst IndexPage = (props) => {\r\n  const onChange = async (page) => {\r\n    console.log(page)\r\n    const res = await getPosts(page);\r\n  const data = await res.json();\r\n  store.dispatch({ type: \"GETDATA\", payload: {...data} }); // component will be able to read from store's state when rendered\r\n  return data\r\n  }\r\n  return (\r\n  <Layout>\r\n    <Header />\r\n    <Content>\r\n      <Carousel/>\r\n      <Row justify=\"space-around\" type=\"flex\">\r\n      <Col span={20} className=\"card mb-50\">\r\n        <Row gutter={16}>\r\n          { props.data.map(view => (\r\n            <Col span={8} md={8} sm={12} xs={24} className=\"mb-50\">\r\n              <Card key={view.id} post={view}/>\r\n            </Col>\r\n          ))}\r\n          <Pagination  onChange={onChange} total={50} />;\r\n          </Row>\r\n      </Col>\r\n      </Row>\r\n    </Content>\r\n    <Footer />\r\n  </Layout> \r\n  )\r\n}\r\n\r\n\r\nIndexPage.getInitialProps = async ({ store, isServer, pathname, query }) => {\r\n  let page = 2;\r\n  const res = await getPosts(page);\r\n  const data = await res.json();\r\n  store.dispatch({ type: \"GETDATA\", payload: {...data} }); // component will be able to read from store's state when rendered\r\n  return data\r\n}\r\n\r\n\r\nexport default connect()(IndexPage);\r\n\r\n\r\n"]},"metadata":{},"sourceType":"module"}