{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime-corejs2/regenerator\";\n\nvar _marked =\n/*#__PURE__*/\n_regeneratorRuntime.mark(fetchUserList);\n\nimport fetch from 'isomorphic-unfetch';\nimport { take, put, fork } from 'redux-saga/effects';\nimport { FETCH_USER_LIST_SUCCESS, fetchUserListSuccess } from './actions';\n/**\r\n * userList saga\r\n */\n\nexport function fetchUserList() {\n  var res, data;\n  return _regeneratorRuntime.wrap(function fetchUserList$(_context) {\n    while (1) {\n      switch (_context.prev = _context.next) {\n        case 0:\n          if (!true) {\n            _context.next = 20;\n            break;\n          }\n\n          _context.next = 3;\n          return take(FETCH_USER_LIST_SUCCESS);\n\n        case 3:\n          _context.prev = 3;\n          _context.next = 6;\n          return fetch('https://jsonplaceholder.typicode.com/users');\n\n        case 6:\n          res = _context.sent;\n          _context.next = 9;\n          return res.json();\n\n        case 9:\n          data = _context.sent;\n          _context.next = 12;\n          return put(fetchUserListSuccess(data));\n\n        case 12:\n          _context.next = 18;\n          break;\n\n        case 14:\n          _context.prev = 14;\n          _context.t0 = _context[\"catch\"](3);\n          _context.next = 18;\n          return console.error('555');\n\n        case 18:\n          _context.next = 0;\n          break;\n\n        case 20:\n        case \"end\":\n          return _context.stop();\n      }\n    }\n  }, _marked, null, [[3, 14]]);\n}\nexport default [fork(fetchUserList)];","map":{"version":3,"sources":["D:/Dora/travel-blog-next/redux/saga.js"],"names":["fetchUserList","fetch","take","put","fork","FETCH_USER_LIST_SUCCESS","fetchUserListSuccess","res","json","data","console","error"],"mappings":";;;;yBAOiBA,a;;AAPjB,OAAOC,KAAP,MAAkB,oBAAlB;AACA,SAASC,IAAT,EAAeC,GAAf,EAAoBC,IAApB,QAAgC,oBAAhC;AACA,SAASC,uBAAT,EAAmCC,oBAAnC,QAA+D,WAA/D;AAEA;;;;AAGA,OAAO,SAAUN,aAAV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,eACE,IADF;AAAA;AAAA;AAAA;;AAAA;AAEH,iBAAME,IAAI,CAACG,uBAAD,CAAV;;AAFG;AAAA;AAAA;AAIW,iBAAMJ,KAAK,CAAC,4CAAD,CAAX;;AAJX;AAIKM,UAAAA,GAJL;AAAA;AAKY,iBAAMA,GAAG,CAACC,IAAJ,EAAN;;AALZ;AAKKC,UAAAA,IALL;AAAA;AAMD,iBAAMN,GAAG,CAACG,oBAAoB,CAACG,IAAD,CAArB,CAAT;;AANC;AAAA;AAAA;;AAAA;AAAA;AAAA;AAAA;AAQD,iBAAMC,OAAO,CAACC,KAAR,CAAc,KAAd,CAAN;;AARC;AAAA;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAaP,eAAe,CACbP,IAAI,CAACJ,aAAD,CADS,CAAf","sourcesContent":["import fetch from 'isomorphic-unfetch';\r\nimport { take, put, fork } from 'redux-saga/effects';\r\nimport { FETCH_USER_LIST_SUCCESS , fetchUserListSuccess } from './actions';\r\n\r\n/**\r\n * userList saga\r\n */\r\nexport function* fetchUserList() {\r\n  while (true) {\r\n    yield take(FETCH_USER_LIST_SUCCESS);\r\n    try {\r\n      const res = yield fetch('https://jsonplaceholder.typicode.com/users');\r\n      const data = yield res.json();\r\n      yield put(fetchUserListSuccess(data));\r\n    } catch (e) {\r\n      yield console.error('555');\r\n    }\r\n  }\r\n}\r\n\r\nexport default [\r\n  fork(fetchUserList)\r\n];"]},"metadata":{},"sourceType":"module"}