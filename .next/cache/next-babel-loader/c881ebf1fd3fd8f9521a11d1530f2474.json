{"ast":null,"code":"import _Object$defineProperty from \"@babel/runtime-corejs2/core-js/object/define-property\";\nimport _Object$defineProperties from \"@babel/runtime-corejs2/core-js/object/define-properties\";\nimport _Object$getOwnPropertyDescriptors from \"@babel/runtime-corejs2/core-js/object/get-own-property-descriptors\";\nimport _Object$getOwnPropertyDescriptor from \"@babel/runtime-corejs2/core-js/object/get-own-property-descriptor\";\nimport _Object$getOwnPropertySymbols from \"@babel/runtime-corejs2/core-js/object/get-own-property-symbols\";\nimport _Object$keys from \"@babel/runtime-corejs2/core-js/object/keys\";\nimport _regeneratorRuntime from \"@babel/runtime-corejs2/regenerator\";\nimport _defineProperty from \"@babel/runtime-corejs2/helpers/esm/defineProperty\";\nimport \"antd/lib/row/style\";\nimport _Row from \"antd/lib/row\";\nimport \"antd/lib/col/style\";\nimport _Col from \"antd/lib/col\";\nimport React from \"react\";\nvar __jsx = React.createElement;\n\nfunction ownKeys(object, enumerableOnly) { var keys = _Object$keys(object); if (_Object$getOwnPropertySymbols) { var symbols = _Object$getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return _Object$getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (_Object$getOwnPropertyDescriptors) { _Object$defineProperties(target, _Object$getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { _Object$defineProperty(target, key, _Object$getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport \"../assets/styles.less\";\nimport Link from 'next/link'; // import Header from '../components/header';\n// import Footer from '../components/footer';\n// import Carousel from '../components/carousel';\n\nimport Layout from '../components/Layout/layout';\nimport Card from '../components/card';\nimport { getPosts } from '../api/index';\nimport { connect } from \"react-redux\";\nvar Content = Layout.Content;\n\nvar IndexPage = function IndexPage(props) {\n  return (// <Layout>\n    //   <Header />\n    //   <Content>\n    //     <Carousel/>\n    //     <Link href='/About'><a>家目錄</a></Link> |\n    //     <Row justify=\"space-around\" type=\"flex\">\n    //     <Col span={20} className=\"card mb-50\">\n    //       <Row gutter={16}>\n    //         { props.data.map(view => (\n    //           <Col span={8} md={8} sm={12} xs={24} className=\"mb-50\">\n    //             <Card key={view.id} post={view}/>\n    //           </Col>\n    //         ))}\n    //         </Row>\n    //     </Col>\n    //     </Row>\n    //   </Content>\n    //   <Footer />\n    // </Layout> \n    __jsx(Layout, null, __jsx(Link, {\n      href: \"/About\"\n    }, __jsx(\"a\", null, \"\\u5BB6\\u76EE\\u9304\")), \" |\", __jsx(_Row, {\n      justify: \"space-around\",\n      type: \"flex\"\n    }, __jsx(_Col, {\n      span: 20,\n      className: \"card mb-50\"\n    }, __jsx(_Row, {\n      gutter: 16\n    }, props.data.map(function (view) {\n      return __jsx(_Col, {\n        span: 8,\n        md: 8,\n        sm: 12,\n        xs: 24,\n        className: \"mb-50\"\n      }, __jsx(Card, {\n        key: view.id,\n        post: view\n      }));\n    })))))\n  );\n};\n\nIndexPage.getInitialProps = function _callee(_ref) {\n  var store, isServer, pathname, query, page, res, data;\n  return _regeneratorRuntime.async(function _callee$(_context) {\n    while (1) {\n      switch (_context.prev = _context.next) {\n        case 0:\n          store = _ref.store, isServer = _ref.isServer, pathname = _ref.pathname, query = _ref.query;\n          page = 1;\n          _context.next = 4;\n          return _regeneratorRuntime.awrap(getPosts(page));\n\n        case 4:\n          res = _context.sent;\n          _context.next = 7;\n          return _regeneratorRuntime.awrap(res.json());\n\n        case 7:\n          data = _context.sent;\n          store.dispatch({\n            type: \"GETDATA\",\n            payload: _objectSpread({}, data)\n          }); // component will be able to read from store's state when rendered\n\n          return _context.abrupt(\"return\", data);\n\n        case 10:\n        case \"end\":\n          return _context.stop();\n      }\n    }\n  });\n};\n\nexport default connect()(IndexPage);","map":{"version":3,"sources":["D:/Dora/travel-blog-next/pages/index.js"],"names":["Link","Layout","Card","getPosts","connect","Content","IndexPage","props","data","map","view","id","getInitialProps","store","isServer","pathname","query","page","res","json","dispatch","type","payload"],"mappings":";;;;;;;;;;;;;;;;;;;AACA,OAAO,uBAAP;AAEA,OAAOA,IAAP,MAAiB,WAAjB,C,CACA;AACA;AACA;;AACA,OAAOC,MAAP,MAAmB,6BAAnB;AACA,OAAOC,IAAP,MAAiB,oBAAjB;AACA,SAASC,QAAT,QAAyB,cAAzB;AACA,SAASC,OAAT,QAAwB,aAAxB;IAEQC,O,GAAYJ,M,CAAZI,O;;AAER,IAAMC,SAAS,GAAG,SAAZA,SAAY,CAACC,KAAD,EAAW;AAE3B,SACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,UAAC,MAAD,QACE,MAAC,IAAD;AAAM,MAAA,IAAI,EAAC;AAAX,OAAoB,sCAApB,CADF,QAEK;AAAK,MAAA,OAAO,EAAC,cAAb;AAA4B,MAAA,IAAI,EAAC;AAAjC,OACA;AAAK,MAAA,IAAI,EAAE,EAAX;AAAe,MAAA,SAAS,EAAC;AAAzB,OACE;AAAK,MAAA,MAAM,EAAE;AAAb,OACIA,KAAK,CAACC,IAAN,CAAWC,GAAX,CAAe,UAAAC,IAAI;AAAA,aACnB;AAAK,QAAA,IAAI,EAAE,CAAX;AAAc,QAAA,EAAE,EAAE,CAAlB;AAAqB,QAAA,EAAE,EAAE,EAAzB;AAA6B,QAAA,EAAE,EAAE,EAAjC;AAAqC,QAAA,SAAS,EAAC;AAA/C,SACE,MAAC,IAAD;AAAM,QAAA,GAAG,EAAEA,IAAI,CAACC,EAAhB;AAAoB,QAAA,IAAI,EAAED;AAA1B,QADF,CADmB;AAAA,KAAnB,CADJ,CADF,CADA,CAFL;AApBA;AAmCD,CArCD;;AAwCAJ,SAAS,CAACM,eAAV,GAA4B;AAAA;AAAA;AAAA;AAAA;AAAA;AAASC,UAAAA,KAAT,QAASA,KAAT,EAAgBC,QAAhB,QAAgBA,QAAhB,EAA0BC,QAA1B,QAA0BA,QAA1B,EAAoCC,KAApC,QAAoCA,KAApC;AACtBC,UAAAA,IADsB,GACf,CADe;AAAA;AAAA,2CAERd,QAAQ,CAACc,IAAD,CAFA;;AAAA;AAEpBC,UAAAA,GAFoB;AAAA;AAAA,2CAGPA,GAAG,CAACC,IAAJ,EAHO;;AAAA;AAGpBX,UAAAA,IAHoB;AAI1BK,UAAAA,KAAK,CAACO,QAAN,CAAe;AAAEC,YAAAA,IAAI,EAAE,SAAR;AAAmBC,YAAAA,OAAO,oBAAMd,IAAN;AAA1B,WAAf,EAJ0B,CAI+B;;AAJ/B,2CAKnBA,IALmB;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,CAA5B;;AASA,eAAeJ,OAAO,GAAGE,SAAH,CAAtB","sourcesContent":["\r\nimport \"../assets/styles.less\";\r\nimport {  Row , Col , Pagination   } from 'antd';\r\nimport Link from 'next/link'\r\n// import Header from '../components/header';\r\n// import Footer from '../components/footer';\r\n// import Carousel from '../components/carousel';\r\nimport Layout from '../components/Layout/layout'\r\nimport Card from '../components/card';\r\nimport { getPosts } from '../api/index';\r\nimport { connect } from \"react-redux\";\r\n\r\nconst { Content } = Layout;\r\n\r\nconst IndexPage = (props) => {\r\n \r\n  return (\r\n  // <Layout>\r\n  //   <Header />\r\n  //   <Content>\r\n  //     <Carousel/>\r\n  //     <Link href='/About'><a>家目錄</a></Link> |\r\n  //     <Row justify=\"space-around\" type=\"flex\">\r\n  //     <Col span={20} className=\"card mb-50\">\r\n  //       <Row gutter={16}>\r\n  //         { props.data.map(view => (\r\n  //           <Col span={8} md={8} sm={12} xs={24} className=\"mb-50\">\r\n  //             <Card key={view.id} post={view}/>\r\n  //           </Col>\r\n  //         ))}\r\n  //         </Row>\r\n  //     </Col>\r\n  //     </Row>\r\n  //   </Content>\r\n  //   <Footer />\r\n  // </Layout> \r\n  <Layout>\r\n    <Link href='/About'><a>家目錄</a></Link> |\r\n       <Row justify=\"space-around\" type=\"flex\">\r\n       <Col span={20} className=\"card mb-50\">\r\n         <Row gutter={16}>\r\n           { props.data.map(view => (\r\n             <Col span={8} md={8} sm={12} xs={24} className=\"mb-50\">\r\n               <Card key={view.id} post={view}/>\r\n             </Col>\r\n           ))}\r\n           </Row>\r\n       </Col>\r\n       </Row>\r\n  </Layout>\r\n  )\r\n}\r\n\r\n\r\nIndexPage.getInitialProps = async ({ store, isServer, pathname, query }) => {\r\n  let page = 1;\r\n  const res = await getPosts(page);\r\n  const data = await res.json();\r\n  store.dispatch({ type: \"GETDATA\", payload: {...data} }); // component will be able to read from store's state when rendered\r\n  return data\r\n}\r\n\r\n\r\nexport default connect()(IndexPage);\r\n\r\n\r\n"]},"metadata":{},"sourceType":"module"}