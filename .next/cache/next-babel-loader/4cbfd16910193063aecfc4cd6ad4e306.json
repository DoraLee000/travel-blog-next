{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime-corejs2/regenerator\";\nimport \"antd/lib/row/style\";\nimport _Row from \"antd/lib/row\";\nimport \"antd/lib/col/style\";\nimport _Col from \"antd/lib/col\";\nimport \"antd/lib/layout/style\";\nimport _Layout from \"antd/lib/layout\";\nimport React from \"react\";\nvar __jsx = React.createElement;\nimport \"../assets/styles.less\";\nimport Link from 'next/link';\nimport Header from '../components/header';\nimport Footer from '../components/footer';\nimport Carousel from '../components/carousel';\nimport Card from '../components/card';\nimport { getPosts } from '../api/index';\nimport { connect } from \"react-redux\";\nvar Content = _Layout.Content;\n\nvar IndexPage = function IndexPage(props) {\n  return __jsx(_Layout, null, __jsx(Header, null), __jsx(Content, null, __jsx(Carousel, null), __jsx(_Row, {\n    justify: \"space-around\",\n    type: \"flex\"\n  }, __jsx(_Col, {\n    span: 20,\n    className: \"card mb-50\"\n  }, __jsx(_Row, {\n    gutter: 16\n  }, props.data.map(function (view) {\n    return __jsx(_Col, {\n      span: 8,\n      md: 8,\n      sm: 12,\n      xs: 24\n    }, __jsx(Card, {\n      key: view.id,\n      post: view\n    }));\n  }))))), __jsx(Footer, null));\n}; // IndexPage.getInitialProps = async () => {\n//   const settings = {\n//     headers: {\n//         Accept: 'application/json',\n//     }\n// };\n//   const res = await fetch('https://www.travel.taipei/open-api/zh-tw/Attractions/All',settings);\n//   const data = await res.json();\n//   return data;\n// };\n// IndexPage.getInitialProps = async ({ req }) => {\n// //   const res = await getPosts()\n// //   const data = await res.json()\n// //   return data;\n// // }\n// const { store, isServer } = props.ctx;\n// const settings = {\n//       headers: {\n//           Accept: 'application/json',\n//       }\n//   };\n//   let userData;\n//   if (store.getState().user.list.list.length === 0) {\n//     const res = await fetch('https://www.travel.taipei/open-api/zh-tw/Attractions/All',settings);\n//     userData = await res.json();\n//     store.dispatch(fetchUserListDataSuccess(userData));\n//   }\n//   return { isServer };\n// }\n\n\nIndexPage.getInitialProps = function _callee(_ref) {\n  var store, isServer, pathname, query, res, data;\n  return _regeneratorRuntime.async(function _callee$(_context) {\n    while (1) {\n      switch (_context.prev = _context.next) {\n        case 0:\n          store = _ref.store, isServer = _ref.isServer, pathname = _ref.pathname, query = _ref.query;\n          _context.next = 3;\n          return _regeneratorRuntime.awrap(getPosts());\n\n        case 3:\n          res = _context.sent;\n          _context.next = 6;\n          return _regeneratorRuntime.awrap(res.json());\n\n        case 6:\n          data = _context.sent;\n          store.dispatch({\n            type: \"GETDATA\",\n            payload: data\n          }); // component will be able to read from store's state when rendered\n\n          return _context.abrupt(\"return\", data);\n\n        case 9:\n        case \"end\":\n          return _context.stop();\n      }\n    }\n  });\n};\n\nexport default connect()(IndexPage); // export default IndexPage;","map":{"version":3,"sources":["D:/Dora/travel-blog-next/pages/index.js"],"names":["Link","Header","Footer","Carousel","Card","getPosts","connect","Content","IndexPage","props","data","map","view","id","getInitialProps","store","isServer","pathname","query","res","json","dispatch","type","payload"],"mappings":";;;;;;;;;AACA,OAAO,uBAAP;AAEA,OAAOA,IAAP,MAAiB,WAAjB;AACA,OAAOC,MAAP,MAAmB,sBAAnB;AACA,OAAOC,MAAP,MAAmB,sBAAnB;AACA,OAAOC,QAAP,MAAqB,wBAArB;AACA,OAAOC,IAAP,MAAiB,oBAAjB;AACA,SAASC,QAAT,QAAyB,cAAzB;AACA,SAASC,OAAT,QAAwB,aAAxB;IAEQC,O,WAAAA,O;;AAER,IAAMC,SAAS,GAAG,SAAZA,SAAY,CAACC,KAAD,EAAW;AAC3B,SACA,qBACE,MAAC,MAAD,OADF,EAEE,MAAC,OAAD,QACE,MAAC,QAAD,OADF,EAEE;AAAK,IAAA,OAAO,EAAC,cAAb;AAA4B,IAAA,IAAI,EAAC;AAAjC,KACA;AAAK,IAAA,IAAI,EAAE,EAAX;AAAe,IAAA,SAAS,EAAC;AAAzB,KACE;AAAK,IAAA,MAAM,EAAE;AAAb,KACIA,KAAK,CAACC,IAAN,CAAWC,GAAX,CAAe,UAAAC,IAAI;AAAA,WACnB;AAAK,MAAA,IAAI,EAAE,CAAX;AAAc,MAAA,EAAE,EAAE,CAAlB;AAAqB,MAAA,EAAE,EAAE,EAAzB;AAA6B,MAAA,EAAE,EAAE;AAAjC,OACE,MAAC,IAAD;AAAM,MAAA,GAAG,EAAEA,IAAI,CAACC,EAAhB;AAAoB,MAAA,IAAI,EAAED;AAA1B,MADF,CADmB;AAAA,GAAnB,CADJ,CADF,CADA,CAFF,CAFF,EAgBE,MAAC,MAAD,OAhBF,CADA;AAoBD,CArBD,C,CAwBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAGA;AACA;AACA;AACA;AAEA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAGAJ,SAAS,CAACM,eAAV,GAA4B;AAAA;AAAA;AAAA;AAAA;AAAA;AAASC,UAAAA,KAAT,QAASA,KAAT,EAAgBC,QAAhB,QAAgBA,QAAhB,EAA0BC,QAA1B,QAA0BA,QAA1B,EAAoCC,KAApC,QAAoCA,KAApC;AAAA;AAAA,2CACRb,QAAQ,EADA;;AAAA;AACpBc,UAAAA,GADoB;AAAA;AAAA,2CAEPA,GAAG,CAACC,IAAJ,EAFO;;AAAA;AAEpBV,UAAAA,IAFoB;AAG1BK,UAAAA,KAAK,CAACM,QAAN,CAAe;AAAEC,YAAAA,IAAI,EAAE,SAAR;AAAmBC,YAAAA,OAAO,EAAEb;AAA5B,WAAf,EAH0B,CAG0B;;AAH1B,2CAInBA,IAJmB;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,CAA5B;;AAQA,eAAeJ,OAAO,GAAGE,SAAH,CAAtB,C,CACA","sourcesContent":["\r\nimport \"../assets/styles.less\";\r\nimport { Layout , Row , Col ,Tag ,Button  } from 'antd';\r\nimport Link from 'next/link';\r\nimport Header from '../components/header';\r\nimport Footer from '../components/footer';\r\nimport Carousel from '../components/carousel';\r\nimport Card from '../components/card';\r\nimport { getPosts } from '../api/index';\r\nimport { connect } from \"react-redux\";\r\n\r\nconst { Content } = Layout;\r\n\r\nconst IndexPage = (props) => {\r\n  return (\r\n  <Layout>\r\n    <Header />\r\n    <Content>\r\n      <Carousel/>\r\n      <Row justify=\"space-around\" type=\"flex\">\r\n      <Col span={20} className=\"card mb-50\">\r\n        <Row gutter={16}>\r\n          { props.data.map(view => (\r\n            <Col span={8} md={8} sm={12} xs={24}>\r\n              <Card key={view.id} post={view}/>\r\n            </Col>\r\n          ))}\r\n          </Row>\r\n      </Col>\r\n      </Row>\r\n    </Content>\r\n    <Footer />\r\n  </Layout> \r\n  )\r\n}\r\n\r\n\r\n// IndexPage.getInitialProps = async () => {\r\n//   const settings = {\r\n//     headers: {\r\n//         Accept: 'application/json',\r\n//     }\r\n// };\r\n//   const res = await fetch('https://www.travel.taipei/open-api/zh-tw/Attractions/All',settings);\r\n//   const data = await res.json();\r\n//   return data;\r\n// };\r\n\r\n\r\n// IndexPage.getInitialProps = async ({ req }) => {\r\n// //   const res = await getPosts()\r\n// //   const data = await res.json()\r\n// //   return data;\r\n  \r\n// // }\r\n\r\n// const { store, isServer } = props.ctx;\r\n// const settings = {\r\n//       headers: {\r\n//           Accept: 'application/json',\r\n//       }\r\n//   };\r\n//   let userData;\r\n//   if (store.getState().user.list.list.length === 0) {\r\n//     const res = await fetch('https://www.travel.taipei/open-api/zh-tw/Attractions/All',settings);\r\n//     userData = await res.json();\r\n//     store.dispatch(fetchUserListDataSuccess(userData));\r\n//   }\r\n//   return { isServer };\r\n// }\r\n\r\n\r\nIndexPage.getInitialProps = async ({ store, isServer, pathname, query }) => {\r\n  const res = await getPosts();\r\n  const data = await res.json();\r\n  store.dispatch({ type: \"GETDATA\", payload: data }); // component will be able to read from store's state when rendered\r\n  return data\r\n}\r\n\r\n\r\nexport default connect()(IndexPage);\r\n// export default IndexPage;\r\n\r\n"]},"metadata":{},"sourceType":"module"}