{"ast":null,"code":"import { all, call, select, put, takeLatest, takeEvery } from 'redux-saga/effects';\nimport { getPosts } from '../api/index';\nimport { actionTypes, failure, loadDataSuccess } from './actions';\nexport const getProject = state => state.count;\n\nfunction* loadDataSaga() {\n  try {\n    //const res = yield fetch('https://jsonplaceholder.typicode.com/users')\n    let project = yield select(getProject);\n    console.log('project', project);\n    const res = yield getPosts();\n    const data = yield res.json();\n    yield put(loadDataSuccess(data.data));\n  } catch (err) {\n    yield put(failure(err));\n  }\n} // function* updateDataSaga() {\n//   console.log('Test Result:');\n//   try {\n//     const res = yield getPosts()\n//     // const res = yield fetch('https://jsonplaceholder.typicode.com/users')\n//     const data = yield res.json()\n//     console.log('data',data)\n//     // yield put(loadDataSuccess(data.data))\n//   } catch (err) {\n//     yield put(failure(err))\n//   }\n// }\n\n\nfunction* rootSaga() {\n  // yield all([takeEvery (actionTypes.LOAD_DATA, loadDataSaga),takeEvery (actionTypes.UPDATE_DATA, loadDataSaga)])\n  yield [takeEvery(actionTypes.LOAD_DATA, loadDataSaga), takeEvery(actionTypes.UPDATE_DATA, loadDataSaga)];\n}\n\nexport default rootSaga;","map":{"version":3,"sources":["D:/Dora/travel-blog-next/store/saga.js"],"names":["all","call","select","put","takeLatest","takeEvery","getPosts","actionTypes","failure","loadDataSuccess","getProject","state","count","loadDataSaga","project","console","log","res","data","json","err","rootSaga","LOAD_DATA","UPDATE_DATA"],"mappings":"AAAA,SAASA,GAAT,EAAcC,IAAd,EAAoBC,MAApB,EAA4BC,GAA5B,EAAiCC,UAAjC,EAA8CC,SAA9C,QAAgE,oBAAhE;AACA,SAASC,QAAT,QAAyB,cAAzB;AACA,SAASC,WAAT,EAAsBC,OAAtB,EAA+BC,eAA/B,QAAsD,WAAtD;AAGA,OAAO,MAAMC,UAAU,GAAIC,KAAD,IAAWA,KAAK,CAACC,KAApC;;AAEP,UAAUC,YAAV,GAAyB;AACvB,MAAI;AACF;AACA,QAAIC,OAAO,GAAG,MAAMZ,MAAM,CAACQ,UAAD,CAA1B;AACAK,IAAAA,OAAO,CAACC,GAAR,CAAY,SAAZ,EAAsBF,OAAtB;AACA,UAAMG,GAAG,GAAG,MAAMX,QAAQ,EAA1B;AACA,UAAMY,IAAI,GAAG,MAAMD,GAAG,CAACE,IAAJ,EAAnB;AACA,UAAMhB,GAAG,CAACM,eAAe,CAACS,IAAI,CAACA,IAAN,CAAhB,CAAT;AACD,GAPD,CAOE,OAAOE,GAAP,EAAY;AACZ,UAAMjB,GAAG,CAACK,OAAO,CAACY,GAAD,CAAR,CAAT;AACD;AACF,C,CAED;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAEA,UAAUC,QAAV,GAAqB;AACnB;AACA,QAAM,CACJhB,SAAS,CAAEE,WAAW,CAACe,SAAd,EAAyBT,YAAzB,CADL,EAEJR,SAAS,CAAEE,WAAW,CAACgB,WAAd,EAA2BV,YAA3B,CAFL,CAAN;AAID;;AAED,eAAeQ,QAAf","sourcesContent":["import { all, call, select, put, takeLatest , takeEvery  } from 'redux-saga/effects';\r\nimport { getPosts } from '../api/index';\r\nimport { actionTypes, failure, loadDataSuccess } from './actions';\r\n\r\n\r\nexport const getProject = (state) => state.count\r\n\r\nfunction* loadDataSaga() {\r\n  try {\r\n    //const res = yield fetch('https://jsonplaceholder.typicode.com/users')\r\n    let project = yield select(getProject)\r\n    console.log('project',project)\r\n    const res = yield getPosts()\r\n    const data = yield res.json()\r\n    yield put(loadDataSuccess(data.data))\r\n  } catch (err) {\r\n    yield put(failure(err))\r\n  }\r\n}\r\n\r\n// function* updateDataSaga() {\r\n//   console.log('Test Result:');\r\n//   try {\r\n//     const res = yield getPosts()\r\n//     // const res = yield fetch('https://jsonplaceholder.typicode.com/users')\r\n//     const data = yield res.json()\r\n//     console.log('data',data)\r\n//     // yield put(loadDataSuccess(data.data))\r\n//   } catch (err) {\r\n//     yield put(failure(err))\r\n//   }\r\n// }\r\n\r\nfunction* rootSaga() {\r\n  // yield all([takeEvery (actionTypes.LOAD_DATA, loadDataSaga),takeEvery (actionTypes.UPDATE_DATA, loadDataSaga)])\r\n  yield [\r\n    takeEvery (actionTypes.LOAD_DATA, loadDataSaga),\r\n    takeEvery (actionTypes.UPDATE_DATA, loadDataSaga)\r\n  ]\r\n}\r\n\r\nexport default rootSaga"]},"metadata":{},"sourceType":"module"}