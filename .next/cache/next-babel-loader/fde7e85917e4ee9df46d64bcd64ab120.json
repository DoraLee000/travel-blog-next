{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime-corejs2/regenerator\";\nvar _jsxFileName = \"D:\\\\Dora\\\\travel-blog-next\\\\pages\\\\post\\\\index.js\";\nvar __jsx = React.createElement;\nimport React from 'react'; //import Link from 'next/link';\n\nimport { Link } from '../../routes';\nimport { getPosts } from '../../api/index'; //import Router from 'next/router'\n\nvar PostPage = function PostPage(props) {\n  console.log('props', props);\n  var route = props.route,\n      title = props.title,\n      url = props.url,\n      data = props.data; // let filterData = data.filter((e)=>{\n  //   return e.id == url.query.id\n  // })\n\n  return __jsx(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 15\n    },\n    __self: this\n  }, __jsx(\"h1\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 16\n    },\n    __self: this\n  }, 123));\n}; // PostPage.getInitialProps = async ({ req }) => {\n//   const res = await getPosts()\n//   const data = await res.json()\n//   return data;\n// }\n\n\nPostPage.getInitialProps = function _callee() {\n  var settings, res, data;\n  return _regeneratorRuntime.async(function _callee$(_context) {\n    while (1) {\n      switch (_context.prev = _context.next) {\n        case 0:\n          settings = {\n            headers: {\n              Accept: 'application/json'\n            }\n          };\n          _context.next = 3;\n          return _regeneratorRuntime.awrap(fetch('https://www.travel.taipei/open-api/zh-tw/Attractions/All', settings));\n\n        case 3:\n          res = _context.sent;\n          _context.next = 6;\n          return _regeneratorRuntime.awrap(res.json());\n\n        case 6:\n          data = _context.sent;\n          return _context.abrupt(\"return\", data);\n\n        case 8:\n        case \"end\":\n          return _context.stop();\n      }\n    }\n  });\n};\n\nexport default PostPage;","map":{"version":3,"sources":["D:/Dora/travel-blog-next/pages/post/index.js"],"names":["React","Link","getPosts","PostPage","props","console","log","route","title","url","data","getInitialProps","settings","headers","Accept","fetch","res","json"],"mappings":";;;AAAA,OAAOA,KAAP,MAAkB,OAAlB,C,CACA;;AACA,SAASC,IAAT,QAAqB,cAArB;AACA,SAASC,QAAT,QAAyB,iBAAzB,C,CACA;;AAEA,IAAMC,QAAQ,GAAG,SAAXA,QAAW,CAAAC,KAAK,EAAG;AACvBC,EAAAA,OAAO,CAACC,GAAR,CAAY,OAAZ,EAAoBF,KAApB;AADuB,MAEfG,KAFe,GAEgBH,KAFhB,CAEfG,KAFe;AAAA,MAEPC,KAFO,GAEgBJ,KAFhB,CAEPI,KAFO;AAAA,MAECC,GAFD,GAEgBL,KAFhB,CAECK,GAFD;AAAA,MAEOC,IAFP,GAEgBN,KAFhB,CAEOM,IAFP,EAIvB;AACA;AACA;;AACA,SACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACC,GADD,CADF,CADF;AAQD,CAfD,C,CAkBA;AACA;AACA;AACA;AAEA;;;AAEAP,QAAQ,CAACQ,eAAT,GAA2B;AAAA;AAAA;AAAA;AAAA;AAAA;AACnBC,UAAAA,QADmB,GACR;AACfC,YAAAA,OAAO,EAAE;AACLC,cAAAA,MAAM,EAAE;AADH;AADM,WADQ;AAAA;AAAA,2CAMPC,KAAK,CAAC,0DAAD,EAA4DH,QAA5D,CANE;;AAAA;AAMnBI,UAAAA,GANmB;AAAA;AAAA,2CAONA,GAAG,CAACC,IAAJ,EAPM;;AAAA;AAOnBP,UAAAA,IAPmB;AAAA,2CAQlBA,IARkB;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,CAA3B;;AAWA,eAAeP,QAAf","sourcesContent":["import React from 'react';\r\n//import Link from 'next/link';\r\nimport { Link } from '../../routes'\r\nimport { getPosts } from '../../api/index';\r\n//import Router from 'next/router'\r\n\r\nconst PostPage = props =>{\r\n  console.log('props',props)\r\n  const { route , title , url , data } = props\r\n\r\n  // let filterData = data.filter((e)=>{\r\n  //   return e.id == url.query.id\r\n  // })\r\n  return(\r\n    <div>\r\n      <h1>\r\n      {123}\r\n      </h1>\r\n    </div>\r\n\r\n  )\r\n}\r\n\r\n\r\n// PostPage.getInitialProps = async ({ req }) => {\r\n//   const res = await getPosts()\r\n//   const data = await res.json()\r\n//   return data;\r\n\r\n// }\r\n\r\nPostPage.getInitialProps = async () => {\r\n  const settings = {\r\n    headers: {\r\n        Accept: 'application/json',\r\n    }\r\n};\r\n  const res = await fetch('https://www.travel.taipei/open-api/zh-tw/Attractions/All',settings);\r\n  const data = await res.json();\r\n  return data;\r\n};\r\n\r\nexport default PostPage"]},"metadata":{},"sourceType":"module"}