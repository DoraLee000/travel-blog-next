{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime-corejs2/regenerator\";\n\nvar _marked =\n/*#__PURE__*/\n_regeneratorRuntime.mark(loadDataSaga);\n\nimport fetch from 'isomorphic-unfetch';\nimport { take, put, fork } from 'redux-saga/effects';\nimport { LOAD_DATA, loadData } from './actions';\nexport function loadDataSaga() {\n  var settings, res, data;\n  return _regeneratorRuntime.wrap(function loadDataSaga$(_context) {\n    while (1) {\n      switch (_context.prev = _context.next) {\n        case 0:\n          settings = {\n            headers: {\n              Accept: 'application/json'\n            }\n          };\n\n        case 1:\n          if (!true) {\n            _context.next = 20;\n            break;\n          }\n\n          _context.next = 4;\n          return take(LOAD_DATA);\n\n        case 4:\n          _context.prev = 4;\n          _context.next = 7;\n          return fetch('https://www.travel.taipei/open-api/zh-tw/Attractions/All', settings);\n\n        case 7:\n          res = _context.sent;\n          _context.next = 10;\n          return res.json();\n\n        case 10:\n          data = _context.sent;\n          _context.next = 13;\n          return put(loadData(data));\n\n        case 13:\n          _context.next = 18;\n          break;\n\n        case 15:\n          _context.prev = 15;\n          _context.t0 = _context[\"catch\"](4);\n          console.log('錯誤'); //yield put(fetchUserListFail());\n\n        case 18:\n          _context.next = 1;\n          break;\n\n        case 20:\n        case \"end\":\n          return _context.stop();\n      }\n    }\n  }, _marked, null, [[4, 15]]);\n} // function * rootSaga () {\n//   yield all([\n//     takeLatest(LOAD_DATA, loadDataSaga)\n//   ]);\n// }\n// export default function* rootSaga() {\n// \tyield takeLatest('GET_MOVIES_REQUEST', getMoviesSaga);\n// }\n// export default rootSaga;\n\nexport default [fork(loadDataSaga)];","map":{"version":3,"sources":["D:/Dora/travel-blog-next/redux/saga.js"],"names":["loadDataSaga","fetch","take","put","fork","LOAD_DATA","loadData","settings","headers","Accept","res","json","data","console","log"],"mappings":";;;;yBAIiBA,Y;;AAJjB,OAAOC,KAAP,MAAkB,oBAAlB;AACA,SAASC,IAAT,EAAeC,GAAf,EAAoBC,IAApB,QAAgC,oBAAhC;AACA,SAASC,SAAT,EAAqBC,QAArB,QAAqC,WAArC;AAEA,OAAO,SAAUN,YAAV;AAAA;AAAA;AAAA;AAAA;AAAA;AACCO,UAAAA,QADD,GACY;AACfC,YAAAA,OAAO,EAAE;AACLC,cAAAA,MAAM,EAAE;AADH;AADM,WADZ;;AAAA;AAAA,eAME,IANF;AAAA;AAAA;AAAA;;AAAA;AAOH,iBAAMP,IAAI,CAACG,SAAD,CAAV;;AAPG;AAAA;AAAA;AASW,iBAAMJ,KAAK,CAAC,0DAAD,EAA4DM,QAA5D,CAAX;;AATX;AASKG,UAAAA,GATL;AAAA;AAUY,iBAAMA,GAAG,CAACC,IAAJ,EAAN;;AAVZ;AAUKC,UAAAA,IAVL;AAAA;AAWD,iBAAMT,GAAG,CAACG,QAAQ,CAACM,IAAD,CAAT,CAAT;;AAXC;AAAA;AAAA;;AAAA;AAAA;AAAA;AAaDC,UAAAA,OAAO,CAACC,GAAR,CAAY,IAAZ,EAbC,CAcD;;AAdC;AAAA;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,C,CA4BP;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AAEA;;AAEA,eAAe,CACbV,IAAI,CAACJ,YAAD,CADS,CAAf","sourcesContent":["import fetch from 'isomorphic-unfetch';\r\nimport { take, put, fork } from 'redux-saga/effects';\r\nimport { LOAD_DATA , loadData } from './actions';\r\n\r\nexport function* loadDataSaga () {\r\n  const settings = {\r\n    headers: {\r\n        Accept: 'application/json',\r\n    }\r\n  }\r\n  while (true) {\r\n    yield take(LOAD_DATA);\r\n    try {\r\n      const res = yield fetch('https://www.travel.taipei/open-api/zh-tw/Attractions/All',settings);\r\n      const data = yield res.json();\r\n      yield put(loadData(data));\r\n    } catch (e) {\r\n      console.log('錯誤')\r\n      //yield put(fetchUserListFail());\r\n    }\r\n  }\r\n  // try {\r\n  //   const res = yield fetch('https://www.travel.taipei/open-api/zh-tw/Attractions/All',settings);\r\n  //   const data = yield res.json();\r\n  //   yield put(loadData(data));\r\n  //   console.log(data)\r\n  // } catch (err) {\r\n  //   console.log('錯誤')\r\n  //   // yield put(failure(err));\r\n  // }\r\n}\r\n\r\n// function * rootSaga () {\r\n//   yield all([\r\n//     takeLatest(LOAD_DATA, loadDataSaga)\r\n//   ]);\r\n// }\r\n\r\n// export default function* rootSaga() {\r\n// \tyield takeLatest('GET_MOVIES_REQUEST', getMoviesSaga);\r\n// }\r\n\r\n// export default rootSaga;\r\n\r\nexport default [\r\n  fork(loadDataSaga)\r\n];\r\n\r\n\r\n"]},"metadata":{},"sourceType":"module"}