{"ast":null,"code":"import _extends from \"@babel/runtime-corejs2/helpers/esm/extends\";\nvar _jsxFileName = \"D:\\\\Dora\\\\travel-blog-next\\\\pages\\\\_app.js\";\nvar __jsx = React.createElement;\n// import App from 'next/app';\n// import { Provider } from 'react-redux';\n// import withRedux from \"next-redux-wrapper\";\n// import store from '../redux/store';\n// class MyApp extends App {\n//     static async getInitialProps({Component, ctx}) {\n//       console.log('Component',Component)\n//       console.log('ctx',ctx)\n//         const pageProps = Component.getInitialProps ? await Component.getInitialProps(ctx) : {};\n//         return {pageProps: pageProps};\n//     }\n//     // static async getInitialProps({ Component, ctx }) {\n//     //   let pageProps = {};\n//     //   const { getInitialProps } = Component;\n//     //   if (getInitialProps) pageProps = await getInitialProps(ctx);\n//     //   const globalSettingsData = await getGlobalSettings();\n//     //   return { ...pageProps, globalSettings };\n//     // }\n//     render() {\n//         const {Component, pageProps, store} = this.props;\n//         return (\n//             <Provider store={store}>\n//                 <Component {...pageProps}/>\n//             </Provider>\n//         );\n//     }\n// }\n// const makeStore = () => store;\n// export default withRedux(makeStore)(MyApp);\nimport React from 'react';\nimport { Provider } from 'react-redux';\nimport withRedux from 'next-redux-wrapper';\nimport store from '../redux/store';\n\nconst MyApp = props => {\n  const {\n    Component,\n    pageProps,\n    store\n  } = props;\n  return __jsx(Provider, {\n    store: store,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 46\n    },\n    __self: this\n  }, __jsx(Component, _extends({}, pageProps, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 47\n    },\n    __self: this\n  })));\n};\n\nexport default withRedux(store)(MyApp);","map":{"version":3,"sources":["D:/Dora/travel-blog-next/pages/_app.js"],"names":["React","Provider","withRedux","store","MyApp","props","Component","pageProps"],"mappings":";;;AAAA;AACA;AACA;AACA;AAEA;AAEA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AAGA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,QAAT,QAAyB,aAAzB;AACA,OAAOC,SAAP,MAAsB,oBAAtB;AACA,OAAOC,KAAP,MAAkB,gBAAlB;;AAEA,MAAMC,KAAK,GAAGC,KAAK,IAAI;AACrB,QAAM;AAAEC,IAAAA,SAAF;AAAaC,IAAAA,SAAb;AAAwBJ,IAAAA;AAAxB,MAAkCE,KAAxC;AACA,SACE,MAAC,QAAD;AAAU,IAAA,KAAK,EAAEF,KAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,MAAC,SAAD,eAAeI,SAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KADF,CADF;AAKD,CAPD;;AASA,eAAeL,SAAS,CAACC,KAAD,CAAT,CAAiBC,KAAjB,CAAf","sourcesContent":["// import App from 'next/app';\r\n// import { Provider } from 'react-redux';\r\n// import withRedux from \"next-redux-wrapper\";\r\n// import store from '../redux/store';\r\n\r\n// class MyApp extends App {\r\n\r\n//     static async getInitialProps({Component, ctx}) {\r\n//       console.log('Component',Component)\r\n//       console.log('ctx',ctx)\r\n//         const pageProps = Component.getInitialProps ? await Component.getInitialProps(ctx) : {};\r\n\r\n//         return {pageProps: pageProps};\r\n//     }\r\n//     // static async getInitialProps({ Component, ctx }) {\r\n//     //   let pageProps = {};\r\n//     //   const { getInitialProps } = Component;\r\n//     //   if (getInitialProps) pageProps = await getInitialProps(ctx);\r\n//     //   const globalSettingsData = await getGlobalSettings();\r\n//     //   return { ...pageProps, globalSettings };\r\n//     // }\r\n\r\n//     render() {\r\n//         const {Component, pageProps, store} = this.props;\r\n\r\n//         return (\r\n//             <Provider store={store}>\r\n//                 <Component {...pageProps}/>\r\n//             </Provider>\r\n//         );\r\n//     }\r\n// }\r\n\r\n// const makeStore = () => store;\r\n// export default withRedux(makeStore)(MyApp);\r\n\r\n\r\nimport React from 'react';\r\nimport { Provider } from 'react-redux';\r\nimport withRedux from 'next-redux-wrapper';\r\nimport store from '../redux/store';\r\n\r\nconst MyApp = props => {\r\n  const { Component, pageProps, store } = props\r\n  return (\r\n    <Provider store={store}>\r\n      <Component {...pageProps} />\r\n    </Provider>\r\n  )\r\n}\r\n\r\nexport default withRedux(store)(MyApp)"]},"metadata":{},"sourceType":"module"}