{"ast":null,"code":"import _Object$defineProperty from \"@babel/runtime-corejs2/core-js/object/define-property\";\nimport _Object$defineProperties from \"@babel/runtime-corejs2/core-js/object/define-properties\";\nimport _Object$getOwnPropertyDescriptors from \"@babel/runtime-corejs2/core-js/object/get-own-property-descriptors\";\nimport _Object$getOwnPropertyDescriptor from \"@babel/runtime-corejs2/core-js/object/get-own-property-descriptor\";\nimport _Object$getOwnPropertySymbols from \"@babel/runtime-corejs2/core-js/object/get-own-property-symbols\";\nimport _Object$keys from \"@babel/runtime-corejs2/core-js/object/keys\";\nimport _defineProperty from \"@babel/runtime-corejs2/helpers/esm/defineProperty\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = _Object$keys(object); if (_Object$getOwnPropertySymbols) { var symbols = _Object$getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return _Object$getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (_Object$getOwnPropertyDescriptors) { _Object$defineProperties(target, _Object$getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { _Object$defineProperty(target, key, _Object$getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport { FETCH_USER_LIST, FETCH_USER_LIST_FAIL, FETCH_USER_LIST_SUCCESS } from '../../../constants/ActionTypes';\nconst initialState = {\n  list: []\n};\n\nconst list = (state = initialState, {\n  type,\n  payload\n}) => {\n  switch (type) {\n    case FETCH_USER_LIST:\n    case FETCH_USER_LIST_FAIL:\n      return initialState;\n\n    case FETCH_USER_LIST_SUCCESS:\n      return _objectSpread({}, state, {\n        list: payload\n      });\n\n    default:\n      return state;\n  }\n};\n\nexport default list;","map":{"version":3,"sources":["D:/Dora/travel-blog-next/redux/reducer.js"],"names":["FETCH_USER_LIST","FETCH_USER_LIST_FAIL","FETCH_USER_LIST_SUCCESS","initialState","list","state","type","payload"],"mappings":";;;;;;;;;;;;AAAA,SACEA,eADF,EAEEC,oBAFF,EAGEC,uBAHF,QAIO,gCAJP;AAMA,MAAMC,YAAY,GAAG;AACnBC,EAAAA,IAAI,EAAE;AADa,CAArB;;AAIA,MAAMA,IAAI,GAAG,CAACC,KAAK,GAAGF,YAAT,EAAuB;AAAEG,EAAAA,IAAF;AAAQC,EAAAA;AAAR,CAAvB,KAA6C;AACxD,UAAQD,IAAR;AACE,SAAKN,eAAL;AACA,SAAKC,oBAAL;AACE,aAAOE,YAAP;;AACF,SAAKD,uBAAL;AACE,+BACKG,KADL;AAEED,QAAAA,IAAI,EAAEG;AAFR;;AAIF;AACE,aAAOF,KAAP;AAVJ;AAYD,CAbD;;AAeA,eAAeD,IAAf","sourcesContent":["import {\r\n  FETCH_USER_LIST,\r\n  FETCH_USER_LIST_FAIL,\r\n  FETCH_USER_LIST_SUCCESS\r\n} from '../../../constants/ActionTypes';\r\n\r\nconst initialState = {\r\n  list: []\r\n};\r\n\r\nconst list = (state = initialState, { type, payload }) => {\r\n  switch (type) {\r\n    case FETCH_USER_LIST:\r\n    case FETCH_USER_LIST_FAIL:\r\n      return initialState;\r\n    case FETCH_USER_LIST_SUCCESS:\r\n      return {\r\n        ...state,\r\n        list: payload\r\n      };  \r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport default list;\r\n"]},"metadata":{},"sourceType":"module"}