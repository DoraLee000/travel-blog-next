{"ast":null,"code":"// import { createStore, applyMiddleware } from 'redux';\n// import createSagaMiddleware from 'redux-saga';\n// import rootReducer from './reducer';\n// import rootSaga from './saga';\n// const sagaMiddleware = createSagaMiddleware();\n// const bindMiddleware = (middleware) => {\n//   if (process.env.NODE_ENV !== 'production') {\n//     const { composeWithDevTools } = require('redux-devtools-extension');\n//     // 开发模式打印redux信息\n//     const { logger } = require('redux-logger');\n//     middleware.push(logger);\n//     return composeWithDevTools(applyMiddleware(...middleware));\n//   }\n//   return applyMiddleware(...middleware);\n// };\n// function configureStore (initialState ) {\n//   const store = createStore(\n//     rootReducer,\n//     initialState,\n//     bindMiddleware([sagaMiddleware])\n//   );\n//   store.runSagaTask = () => {\n//     store.sagaTask = sagaMiddleware.run(rootSaga);\n//   };\n//   store.runSagaTask();\n//   return store;\n// }\n// export default configureStore;","map":{"version":3,"sources":["D:/Dora/travel-blog-next/redux/store.js"],"names":[],"mappings":"AAAA;AACA;AAEA;AACA;AAEA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;AAEA","sourcesContent":["// import { createStore, applyMiddleware } from 'redux';\r\n// import createSagaMiddleware from 'redux-saga';\r\n\r\n// import rootReducer from './reducer';\r\n// import rootSaga from './saga';\r\n\r\n// const sagaMiddleware = createSagaMiddleware();\r\n\r\n// const bindMiddleware = (middleware) => {\r\n//   if (process.env.NODE_ENV !== 'production') {\r\n//     const { composeWithDevTools } = require('redux-devtools-extension');\r\n//     // 开发模式打印redux信息\r\n//     const { logger } = require('redux-logger');\r\n//     middleware.push(logger);\r\n//     return composeWithDevTools(applyMiddleware(...middleware));\r\n//   }\r\n//   return applyMiddleware(...middleware);\r\n// };\r\n\r\n// function configureStore (initialState ) {\r\n//   const store = createStore(\r\n//     rootReducer,\r\n//     initialState,\r\n//     bindMiddleware([sagaMiddleware])\r\n//   );\r\n\r\n//   store.runSagaTask = () => {\r\n//     store.sagaTask = sagaMiddleware.run(rootSaga);\r\n//   };\r\n\r\n//   store.runSagaTask();\r\n//   return store;\r\n// }\r\n\r\n// export default configureStore;\r\n"]},"metadata":{},"sourceType":"script"}