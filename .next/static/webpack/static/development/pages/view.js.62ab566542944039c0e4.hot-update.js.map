{"version":3,"file":"static/webpack/static\\development\\pages\\view.js.62ab566542944039c0e4.hot-update.js","sources":["webpack:///./pages/view.js"],"sourcesContent":["import { connect } from 'react-redux';\r\nimport \"../assets/styles.less\";\r\nimport { Layout , Row , Col ,Tag ,Button  } from 'antd';\r\nimport Header from '../components/header';\r\nimport Footer from '../components/footer';\r\nimport Carousel from '../components/carousel';\r\n\r\n\r\nconst { Content } = Layout;\r\nconst PostPage = props => {\r\n  const { detail, router } = props;\r\n  console.log(props)\r\n  const filterData = (view) =>{\r\n    return view.filter(e => e.id == router.query.id)\r\n  }\r\n  console.log(filterData)\r\n  return (\r\n    <Layout>\r\n    <Header />\r\n    <Content>\r\n      <Row justify=\"space-around\" type=\"flex\">\r\n      <Col span={20} className=\"card mb-50\">\r\n        <Row gutter={16}>\r\n        <div>{`store.value is ${filterData(detail)}`}</div>\r\n        </Row>\r\n      </Col>\r\n      </Row>\r\n    </Content>\r\n    <Footer />\r\n  </Layout> \r\n  )\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n  return {\r\n    detail: state.views.data,\r\n  };\r\n}\r\n\r\n\r\nPostPage.getInitialProps = async ({ store }) => {\r\n  const data = '88888'\r\n  store.dispatch({ type: \"GETDATA\", payload: {...data} }); // component will be able to read from store's state when rendered\r\n  return data\r\n}\r\n\r\nPostPage.getInitialProps = async (props) => {\r\n  const { store, isServer } = props.ctx;\r\n  let userData;\r\n  console.log(store.getState())\r\n  // if (store.getState().user.list.list.length === 0) {\r\n  //   const res = await fetch('https://jsonplaceholder.typicode.com/users');\r\n  //   userData = await res.json();\r\n  //   store.dispatch(fetchUserListDataSuccess(userData));\r\n  // }\r\n  // return { isServer };\r\n};\r\n\r\n\r\nexport default connect(mapStateToProps)(PostPage);"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;AACA;AAEA;AACA;AACA;AAGA;AACA;AAAA;AAAA;AAAA;AAEA;AACA;AAAA;AACA;AAAA;AAAA;AACA;AACA;AAAA;AACA;AAIA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AASA;AACA;AACA;AACA;AACA;AADA;AAGA;AACA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AAAA;AAAA;AAAA;AACA;AAHA;AACA;AADA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAKA;AAAA;AACA;AADA;AAAA;AAAA;AAAA;AAAA;AAGA;AAEA;AACA;AACA;AACA;AACA;AACA;AAVA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAYA;;;;A","sourceRoot":""}